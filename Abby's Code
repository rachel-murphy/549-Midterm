# load the dataset and change all variable types to integers so that the correlations work. then produce the correlation matrix
hd <- read.csv("processed.heartdisease.txt")
head(hd)

hdInteger<-hd[,which(sapply(hd, class) == "integer")]
res <- cor(hdInteger)
round(res, 2)


# scatterplot matrix, with correlation lines
pairs(hdInteger,
  panel = function (x, y, ...) {
    points(x, y, ...)
    abline(lm(y ~ x), col = "red", lwd=3)
    }, 
  pch = ".", cex = 5)
  

hdInteger$heartDisease <- ifelse(hdInteger$num > 0,1,0) # making variable for just predicting heart disease, not severity

hd_part5 <- hdInteger[,-11] # taking out original variable for heart disease since we won't use it with this model

# partition
set.seed(55)  
train.index <- sample(c(1:dim(hd_part5)[1]), dim(hd_part5)[1]*0.5)  
train.df <- hd_part5[train.index, ]
holdout <- hd_part5[-train.index, ]

# validation set is 30% of the remaining 50%
valid.index <- sample(c(1:dim(holdout)[1]), dim(holdout)[1]*(.3/.5))
valid.df <- holdout[valid.index, ]
test.df <- holdout[-valid.index, ] # idk if we really need this partition but thats what was in my notes

# fit the null and full models
null.model <- glm(heartDisease~1,data=train.df,family="binomial")
full.model <- glm(heartDisease~.,data=train.df,family="binomial")

# search for best AIC model
step.out <- step(null.model,scope=list(lower=null.model,upper=full.model),
                 direction="both")
# accoring to AIC, the best model is heartDisease ~ exang + sex + cp + thalach + chol + trestbps

# fit the model
out.train <- glm(heartDisease~exang + sex + cp + thalach + chol + trestbps,
                 data=train.df,family="binomial")

# get predicted values
pred.train <- predict(out.train,train.df[,-11],type="response")

# get the confusion matrix
library(caret)
confusionMatrix(as.factor(ifelse(pred.train > 0.5, 1, 0)),
                as.factor(train.df$heartDisease),positive="1")

# find the cutoff that provides the highest accuracy               
cut <- seq(from=.01,to=.99,by=.01)

# initialize a data frame with two columns: k, and accuracy
accuracy.df <- data.frame(Probability = cut, Accuracy = rep(0, length(cut)))

for(i in 1:length(cut)) {
accuracy.df[i,2] <- confusionMatrix(as.factor(ifelse(pred.train > cut[i],
                                                     1, 0)),
                                    as.factor(train.df$heartDisease),
                                    positive="1")$overall[1]
}

max.cut.lr <- accuracy.df[which.max(accuracy.df[,2]),]
max.cut.lr

# now with validation data
# fit the model
out.valid <- glm(heartDisease~exang + sex + cp + thalach + chol + trestbps,
                 data=valid.df,family="binomial")
summary(out.valid)

# get predictions and make classification matrix
pred.valid <- predict(out.valid,valid.df[,-11],type="response")

library(caret)
confusionMatrix(as.factor(ifelse(pred.valid > max.cut.lr[1,1], 1, 0)),
                as.factor(valid.df$heartDisease), positive="1")

# initializing new patient data for prediction
newobs <- rbind( c(60,0,3,102,318,0,0,160,0,0,1,1.0,3.0) )
dimnames(newobs) <- list(NULL,c('age','sex', 'cp', 'trestbps', 'chol', 'fbs', 'restecg', 'thalach', 'exang', 'oldpeak', 'slope', 'ca', 'thal'))
newobs <- data.frame(newobs)
# probability of developing heart disease
pred.new.patient <- predict(out.valid,newobs,type="response")
pred.new.patient
ifelse(pred.new.patient<max.cut.lr[1,1],"Patient is predicted to not develop heart disease", "Patient is predicted to develop heart disease")
